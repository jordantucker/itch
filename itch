#!/usr/bin/env python

import os, sys, subprocess, re, platform
from datetime import datetime
from glob import glob
from pprint import pprint

user = os.environ['USER']
scratch_root = '/uscmst1b_scratch/lpc1/3DayLifetime/' + user
itch_root = os.path.join(scratch_root, 'itch')
itch_fn = os.path.expanduser('~/.itch.txt')

def popen(cmd, shell=False):
    if type(cmd) == str:
        cmd = cmd.split()
    return subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=shell)

def touch(fname, times=None):
    with open(fname, 'a'):
        os.utime(fname, times)

def todo():
    l = []

    if os.path.isfile(itch_fn):
        for line in open(itch_fn):
            line = line.strip()
            if line and not line.startswith('#'):
                if not line.startswith(scratch_root):
                    line = os.path.join(scratch_root, line)
                if os.path.exists(line) or '*' in line or '?' in line:
                    l.append(line)

    for root, dirs, files in os.walk(itch_root):
        for fn in files:
            l.append(os.path.join(root, fn))

    return l

def scratch():
    print 'scratch from %s at %s:\n' % (platform.node(), datetime.now())
    for fn in todo():
        if '*' in fn or '?' in fn:
            pattern = fn
            for fn in glob(pattern):
                touch(fn)
            print 'touched %s' % pattern
        elif os.path.exists(fn):
            touch(fn)
            print 'touched %s' % fn
        else:
            print 'fn %s no longer exists' % fn

def install():
    script_path = os.path.abspath(sys.argv[0])
    crontab = ''
    p = popen('crontab -l')
    r = p.communicate()
    if p.returncode == 0:
        crontab += r[0]
    if script_path in crontab:
        print 'crontab already installed'
        return

    crontab = crontab.strip()
    if crontab:
        crontab = '\n'.join(x.strip() for x in crontab.split('\n') if x.strip()) + '\n'
    crontab += '@daily %s scratch\n' % script_path

    p = popen('crontab -')
    p.stdin.write(crontab)
    p.communicate()
    if p.returncode != 0:
        print 'could not install crontab'

if __name__ == '__main__':
    if len(sys.argv) > 1:
        cmd = sys.argv[1]
        if cmd == 'scratch':
            scratch()
        elif cmd == 'todo':
            pprint(todo())
        elif cmd == 'install':
            install()
        else:
            print 'huh?'
